{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Apache Beam Aula 01","provenance":[],"mount_file_id":"14Csgfbc0Ar2DQIl_hwF8VaZuOZOdVJDM","authorship_tag":"ABX9TyNqF/3Wfffk1jU2wd2GVTT3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"sGOQ43860_rT"},"source":["pip install apache-beam[interactive]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cuL8P9Zi2vAP"},"source":["#importar pipeline\n","import apache_beam as beam\n","p1 = beam.Pipeline()\n","\n","#cada barra é um comando\n","#skip_header_lines =1 >> serve para pular linha cabeçalho\n","voos = (\n","    p1\n","    |'Extrair os dados'>> beam.io.ReadFromText(\"/content/drive/MyDrive/Colab Notebooks/voos_sample.csv\",skip_header_lines =0)\n","    |'Separador' >> beam.Map(lambda record: record.split(\",\"))\n","    #|'Filtrar por JFK' >> beam.Filter(lambda record: record[3] =='JFK')\n","    |'Saida de dados' >> beam.Map(print)\n","    #|'Gravar Resultado' >> beam.io.WriteToText('resultado.txt')\n",")\n","p1.run()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cib6-G0fIWvy"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LngpFCe76v_W"},"source":["p1 = beam.Pipeline()\n","\n","#FlatMap para separar as palavras\n","voos = (\n","    p1\n","    |'Extrair os dados'>> beam.io.ReadFromText(\"/content/poema.txt\",skip_header_lines =0)\n","    |'Separador' >> beam.FlatMap(lambda record: record.split(\" \"))\n","    |'Saida de dados' >> beam.FlatMap(print)\n","    #|'Gravar Resultado' >> beam.io.WriteToText('resultado.txt')\n",")\n","p1.run()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l5xSH6uTMZRy","executionInfo":{"status":"ok","timestamp":1636050694052,"user_tz":180,"elapsed":675,"user":{"displayName":"André Victor","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhZG_yNRfZ6bbCMS-5rPCZ3Lullv0I_tQoX6r35nA=s64","userId":"08853424314763147906"}},"outputId":"865fd6e1-d6ab-4cb1-f363-7047020fa345"},"source":["palavras=['quatro','que']\n","\n","def rastrearpalavras(i):\n","  if i in palavras:\n","    return True\n","\n","p1 = beam.Pipeline()\n","\n","voos = (\n","    p1\n","    |'Extrair os dados'>> beam.io.ReadFromText(\"/content/poema.txt\",skip_header_lines =0)\n","    |'Separador' >> beam.FlatMap(lambda record: record.split(\" \"))\n","    |'Encontrar as palavras' >> beam.Filter(rastrearpalavras)\n","    |'Saida de dados' >> beam.FlatMap(print)\n","    #|'Gravar Resultado' >> beam.io.WriteToText('resultado.txt')\n",")\n","p1.run()"],"execution_count":34,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:root:Make sure that locally built Python SDK docker image has Python 3.7 interpreter.\n"]},{"output_type":"stream","name":"stdout","text":["quatro\n","que\n","quatro\n","quatro\n","que\n","quatro\n"]},{"output_type":"execute_result","data":{"text/plain":["<apache_beam.runners.portability.fn_api_runner.fn_runner.RunnerResult at 0x7f571b3a3590>"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZzFvf5wsTC1I","executionInfo":{"status":"ok","timestamp":1636052669944,"user_tz":180,"elapsed":678,"user":{"displayName":"André Victor","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhZG_yNRfZ6bbCMS-5rPCZ3Lullv0I_tQoX6r35nA=s64","userId":"08853424314763147906"}},"outputId":"9d12bede-78e3-4189-8f3c-46e9c8bf9e9c"},"source":["p1 = beam.Pipeline()\n","\n","atraso_tempo = (\n","    p1\n","    |'Extrair os dados'>> beam.io.ReadFromText(\"/content/drive/MyDrive/Colab Notebooks/voos_sample.csv\",skip_header_lines =0)\n","    |'Separador' >> beam.Map(lambda record: record.split(\",\"))\n","    |'Aeroportos Atrasados' >> beam.Filter(lambda record: int(record[8]) >0)\n","    |'Agregação de Colunas' >> beam.Map(lambda record:(record[3],int(record[8])))\n","    |'Combinar os dados' >> beam.CombinePerKey(sum)\n","    |'Saida de dados' >> beam.Map(print)\n","    #|'Gravar Resultado' >> beam.io.WriteToText('resultado.txt')\n",")\n","p1.run()"],"execution_count":39,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:root:Make sure that locally built Python SDK docker image has Python 3.7 interpreter.\n"]},{"output_type":"stream","name":"stdout","text":["('JFK', 94)\n","('DFW', 153)\n","('OGG', 95)\n","('LAX', 12)\n","('SFO', 208)\n"]},{"output_type":"execute_result","data":{"text/plain":["<apache_beam.runners.portability.fn_api_runner.fn_runner.RunnerResult at 0x7f571b2a0650>"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"IiM-2LBfXq7u"},"source":["p1 = beam.Pipeline()\n","\n","atraso_qtd = (\n","    p1\n","    |'Extrair os dados'>> beam.io.ReadFromText(\"/content/drive/MyDrive/Colab Notebooks/voos_sample.csv\",skip_header_lines =0)\n","    |'Separador' >> beam.Map(lambda record: record.split(\",\"))\n","    |'Aeroportos Atrasados' >> beam.Filter(lambda record: int(record[8]) >0)\n","    |'Agregação de Colunas' >> beam.Map(lambda record:(record[3],int(record[8])))\n","    |'Combinar os dados' >> beam.combiners.Count.PerKey()\n","    |'Saida de dados' >> beam.Map(print)\n","    #|'Gravar Resultado' >> beam.io.WriteToText('resultado.txt')\n",")\n","p1.run()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g15a-gfGfzBc","executionInfo":{"status":"ok","timestamp":1636056625654,"user_tz":180,"elapsed":910,"user":{"displayName":"André Victor","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhZG_yNRfZ6bbCMS-5rPCZ3Lullv0I_tQoX6r35nA=s64","userId":"08853424314763147906"}},"outputId":"65a96a45-6f02-47ec-950f-41308f545474"},"source":["p1 = beam.Pipeline()\n","\n","atraso_tempo = (\n","    p1\n","    |'Extrair os dados'>> beam.io.ReadFromText(\"/content/drive/MyDrive/Colab Notebooks/voos_sample.csv\",skip_header_lines =0)\n","    |'Separador' >> beam.Map(lambda record: record.split(\",\"))\n","    |'Aeroportos Atrasados' >> beam.Filter(lambda record: int(record[8]) >0)\n","    |'Agregação de Colunas' >> beam.Map(lambda record:(record[3],int(record[8])))\n","    |'Combinar os dados' >> beam.CombinePerKey(sum)\n","    #|'Saida de dados' >> beam.Map(print)\n","    #|'Gravar Resultado' >> beam.io.WriteToText('resultado.txt')\n",")\n","\n","\n","\n","\n","atraso_qtd = (\n","    p1\n","    |'Extrair os dados2'>> beam.io.ReadFromText(\"/content/drive/MyDrive/Colab Notebooks/voos_sample.csv\",skip_header_lines =0)\n","    |'Separador2' >> beam.Map(lambda record: record.split(\",\"))\n","    |'Aeroportos Atrasados2' >> beam.Filter(lambda record: int(record[8]) >0)\n","    |'Agregação de Colunas2' >> beam.Map(lambda record:(record[3],int(record[8])))\n","    |'Combinar os dados2' >> beam.combiners.Count.PerKey()\n","    #|'Saida de dados' >> beam.Map(print)\n","    #|'Gravar Resultado' >> beam.io.WriteToText('resultado.txt')\n",")\n","\n","\n","tabela_final = (\n","    {'Qte_atrasos':atraso_qtd,'Tempo_Atrasos':atraso_tempo}\n","    |'Agrupamentos das Pipes' >> beam.CoGroupByKey()\n","    |'Imprimir resultado' >> beam.io.Wrting\n","    |'Gravar resultado' >> beam.Map(print)\n","\n","\n",")\n","\n","p1.run()\n"],"execution_count":60,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:root:Make sure that locally built Python SDK docker image has Python 3.7 interpreter.\n"]},{"output_type":"stream","name":"stdout","text":["('JFK', {'Qte_atrasos': [5], 'Tempo_Atrasos': [94]})\n","('DFW', {'Qte_atrasos': [2], 'Tempo_Atrasos': [153]})\n","('OGG', {'Qte_atrasos': [1], 'Tempo_Atrasos': [95]})\n","('LAX', {'Qte_atrasos': [2], 'Tempo_Atrasos': [12]})\n","('SFO', {'Qte_atrasos': [2], 'Tempo_Atrasos': [208]})\n"]},{"output_type":"execute_result","data":{"text/plain":["<apache_beam.runners.portability.fn_api_runner.fn_runner.RunnerResult at 0x7f5719b7c850>"]},"metadata":{},"execution_count":60}]}]}